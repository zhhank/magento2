<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2012 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php /** @var $this Mage_Adminhtml_Block_Catalog_Product_Edit_NewCategory */ ?>
<script type="text/javascript">//<[CDATA[
(function($) {
    'use strict';
    $(function() {
        Validation.add('validate-parent-category', 'Choose existing category.', function() {
            return $('#new_category_parent_id').val() !== '';
        });
        var newCategoryForm = new Validation($('#new-category').get(0));

        var treeToList = function(list, nodes, level, path) {
            $.each(nodes, function() {
                list.push({
                    label: this.name,
                    value: this.id,
                    level: level,
                    item: this,
                    path: path + this.name
                });
                if ('children' in this) {
                    treeToList(list, this.children, level + 1, path + this.name + '/' );
                }
            });
            return list;
        };

        $('#new_category_parent')
            .removeClass('validate-parent-category')
            .addClass('validate-parent-category') // adjusting validation rules order
            .bind('ajaxSend ajaxComplete', function(e) {
                e.stopPropagation();
                switch (e.type) {
                    case 'ajaxSend':
                        $('#new_category_parent').addClass('parent-category-selector-active');
                        break;
                    case 'ajaxComplete':
                        $('#new_category_parent').removeClass('parent-category-selector-active');
                        break;
                }
            })
            .autocomplete({
                source: function(request, response) {
                    $.ajax({
                        url: '<?php echo $this->getSuggestCategoryUrl()?>',
                        data: {name_part: request.term},
                        dataType: 'json',
                        context: $('#new_category_parent')
                    }).success(function(data) {
                        response(treeToList([], data || [], 0, ''));
                    });
                },
                minLength: 0,
                focus: function(event, ui) {
                    $(this).val(ui.item.label);
                    return false;
                },
                open: function(event, ui) {
                    $('#new_category_parent').data('selected-name', '');
                },
                select: function(event, ui) {
                    $('#new_category_parent_id').val(ui.item.value);
                    $('#new_category_parent').data('selected-name', $('#new_category_parent').val());
                    $(this).val(ui.item.label);

                    if ($('#new_category_name').val() === '') {
                        $('#new_category_name').focus();
                    } else {
                        $('#<?php echo $this->getJsId('save-button')?>').focus();
                    }

                    return false;
                },
                close: function(event, ui) {
                    var selectedName = $('#new_category_parent').data('selected-name');
                    $('#new_category_parent').val(selectedName === '' ? $(this).data('autocomplete').term : selectedName);
                    return false;
                }
            })
            .focus(function () {
                var $this = $(this);
                if (!$this.data('focus-emulated') && $this.val() === '') {
                    $this.autocomplete('search');
                }
                setTimeout(function() { // fix for IE9 in which two focus events are triggered
                    $this.data('focus-emulated', false);
                }, 100);
            })
            .data('autocomplete')._renderItem = function(ul, item) {
                var level = window.parseInt(item.level),
                    $li = $('<li>');
                $li.data('item.autocomplete', item);
                $li.append($('<a/>', {
                    'data-level': level,
                    'data-ui-id': 'category-selector-' + item.value
                }).attr('title', item.path)
                    .addClass('level-' + level)
                    .text(item.label)
                    .css({marginLeft: level * 16})
                );
                if (window.parseInt(item.item.is_active, 10) == 0) {
                    $li.addClass('category-disabled');
                }
                $li.appendTo(ul);

                return $li;
            };

        $('#new-category').dialog({
            title: '<?php echo Mage::helper('Mage_Catalog_Helper_Data')->__('Create New Category');?>',
            autoOpen: false,
            id: '<?php echo $this->getJsId()?>',
            minWidth: 560,
            modal: true,
            resizable: false,
            open: function() {
                var enteredName = $('#category_ids + .category-selector-container .category-selector-input').val();
                $('#new_category_name').val(enteredName);
                if (enteredName === '') {
                    $('#new_category_name').focus();
                } else {
                    $('#new_category_parent').data('focus-emulated', true).focus();
                }
                $('#new_category_messages').html('');
            },
            close: function() {
                $('#new_category_name, #new_category_parent_id, #new_category_parent').val('');
                $('#new_category_parent').autocomplete('close');
                newCategoryForm.reset();
                $('#category_ids + .category-selector-container .category-selector-input').focus();
            },
            buttons: [{
                text: '<?php echo $this->helper('Mage_Catalog_Helper_Data')->__('Cancel');?>',
                id: '<?php echo $this->getJsId('close-button')?>',
                click: function() {
                    $(this).dialog('close');
                }
            }, {
                text: '<?php echo $this->helper('Mage_Catalog_Helper_Data')->__('Save');?>',
                id: '<?php echo $this->getJsId('save-button')?>',
                click: function() {
                    if ($('#new_category_parent').data('selected-name') != $('#new_category_parent').val()) {
                        $('#new_category_parent_id').val('');
                    }

                    if (!newCategoryForm.validate()) {
                        return;
                    }

                    $.ajax({
                        type: 'POST',
                        url: '<?php echo $this->getSaveCategoryUrl()?>',
                        data: {
                            general: {
                                name: $('#new_category_name').val(),
                                is_active: 1,
                                include_in_menu: 0
                            },
                            parent: $('#new_category_parent_id').val(),
                            use_config: ['available_sort_by', 'default_sort_by'],
                            form_key: '<?php echo $this->getFormKey()?>',
                            return_session_messages_only: 1
                        },
                        dataType: 'json',
                        context: $('body')
                    }).success(function (data) {
                        if (!data.error) {
                            $('#category_ids').trigger('categorySelector:add', {
                                text: data.category.name,
                                value: data.category.entity_id
                            });
                            $('#new_category_name, #new_category_parent_id, #new_category_parent').val('');
                            $('#category_ids + .category-selector-container .category-selector-input').val('');
                            $('#new-category').dialog('close');
                        } else {
                            $('#new_category_messages').html(data.messages);
                        }
                    });
                }
            }]
        });
    });
})(jQuery);
//]]>
</script>
